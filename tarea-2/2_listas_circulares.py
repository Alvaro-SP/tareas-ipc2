# -*- coding: utf-8 -*-
"""2. Listas Circulares.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14dftewC4xnWpXpluwY4FVtXoJKqslHbx
"""

print("Nombre: Alvaro Socop Carne : 202000194")

"""# **Listas Circulares**
## Definición de la clase Estudiante
"""

class estudiante:
  def __init__(self, carne, nombre, edad, direccion, telefono, email, carrera, puesto): #el self es como el this de java, indicandole que los atributos pertenecen a esa clase
    self.carne = carne
    self.nombre = nombre
    self.edad = edad
    self.direccion = direccion
    self.telefono = telefono
    self.email = email
    self.carrera = carrera
    self.puesto = puesto

"""### **Definición de la clase nodo**"""

class nodo:
  def __init__(self, estudiante=None, siguiente=None): #al construir funciones constructoras se le puede dar valores a los parametros que nosotros enviemos
    self.estudiante = estudiante
    self.siguiente = siguiente

"""**Definición de la clase Lista Circular**"""

#creación , insercion, eliminación, busqueda
class lista_circular:
  def __init__(self): #cuando la lista está vacía, solo tendriamos la lista con un elemento sin nada
    #el elemento esta esperando a que se le agreguen nodos transformandolo en el nodo que se le envie como primero.
    self.primero = None #al principio apunta a vacio
  def insertar(self, est):#necesitamos enviarle un nodo porque es parte el estudiante de ese nodo.
    if self.primero is None:
      self.primero=nodo(estudiante=est) #estudiante es la variable que se encuentra en la clase Nodo
      self.primero.siguiente=self.primero
    else:
      actual=nodo(estudiante=est, siguiente = self.primero.siguiente)
      self.primero.siguiente=actual

  def recorrer(self):
    if self.primero is None:
      return
    actual=self.primero
    print("carne: ", actual.estudiante.carne, "nombre: ", actual.estudiante.nombre, "email: ", actual.estudiante.email, "-->")
    while actual.siguiente != self.primero:
      actual = actual.siguiente
      print("carne: ", actual.estudiante.carne, "nombre: ", actual.estudiante.nombre, "email: ", actual.estudiante.email, "-->")

  def eliminar(self, carne):
    actual=self.primero
    anterior=None
    no_encontrado = False
    while actual and actual.estudiante.carne != carne:
      anterior=actual
      actual = actual.siguiente
      if actual==self.primero:
        no_encontrado=True
        break
    if not no_encontrado:        
      if anterior is not None:
        anterior.siguiente=actual.siguiente        
      else:
        while actual.siguiente != self.primero:
          actual=actual.siguiente
        actual.siguiente=self.primero.siguiente
        self.primero=self.primero.siguiente

  def buscar(self, carne):
    actual=self.primero
    anterior=None
    no_encontrado = False
    while actual and actual.estudiante.carne != carne:
      anterior=actual
      actual = actual.siguiente
      if actual==self.primero:
        no_encontrado=True
        print("No se encontro el estudiante con ese carne.")
        break
    if not no_encontrado:
      print("el estudiante encontrado es: ", actual.estudiante.carne)
      print("carne: ", actual.estudiante.carne, "nombre: ", actual.estudiante.nombre, "email: ", actual.estudiante.email, "-->")        
      if anterior is not None:
        anterior.siguiente=actual.siguiente        
      else:
        while actual.siguiente != self.primero:
          
          actual=actual.siguiente
          
          
        actual.siguiente=self.primero.siguiente
        self.primero=self.primero.siguiente

"""### **Creacion de objetos Estudiante**"""

e1=estudiante(202000194, "Alvaro Socop",20, "CASA", 57707472, "socop2412@gmail.com", "Ingenieria en Sistemas", "Estudiante")
e2=estudiante(123456, "Persona2", "Cayala",15, 65849852, "6515198@gmail.com", "Ingenieria en Sistemas", "Estudiante")
e3=estudiante(4444444, "Fernando Socop",18, "Villa Hermosa", 64198189, "6549819@gmail.com", "Ingenieria en Sistemas", "Estudiante")
e4=estudiante(123456789, "Mauricio Socop",16, "Villa Nueva", 9849819812, "65195898@gmail.com", "Ingenieria Química", "Estudiante")

"""### **Inserción*"""

lista_e = lista_circular()
lista_e.insertar(e1)
lista_e.insertar(e2)
lista_e.insertar(e3)
lista_e.insertar(e4)

"""### **Recorrer Lista**"""

lista_e.recorrer()

"""Nodos:
1er > 2do > 3ero

Gerson > Karen > Luis

### **Eliminar un nodo lista**
"""

lista_e.eliminar(123456789)
lista_e.eliminar(55)
lista_e.recorrer()

### **Buscar un nodo lista**

lista_e.buscar(202000194)